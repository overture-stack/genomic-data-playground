version: '3.7'
services:
  some-auth-server:
    build: ./auth
    environment:
      AUTH_PORT: 8080
    ports:
      - "9082:8080"
    volumes:
      - "auth-data:/opt/dcc/auth_data"
  object-storage:
    #NOTE: must use 2018-05-11 version, since the ETag rules are different. 2018 will return the part md5, anything newer will not, and score-server expects etag==md5
    image: minio/minio:RELEASE.2018-05-11T00-29-24Z
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "8085:9000"
  score-server:
    image: overture/score-server:5.0.0
    user: "$MY_UID:$MY_GID"
    environment:
      SPRING_PROFILES_ACTIVE: amazon,collaboratory,prod,secure
      SERVER_PORT: 8080
      OBJECT_SENTINEL: heliograph
      BUCKET_NAME_OBJECT: oicr.icgc.test
      BUCKET_NAME_STATE: oicr.icgc.test
      COLLABORATORY_DATA_DIRECTORY: data
      METADATA_URL: http://song-server:8080
      S3_ENDPOINT:  http://object-storage:9000
      S3_ACCESSKEY: minio
      S3_SECRETKEY: minio123
      S3_SIGV4ENABLED: "true"
      AUTH_SERVER_URL: http://some-auth-server:8080/check_token/
      AUTH_SERVER_CLIENTID:  3kJhz9pNtC0pFHAxr2SPkUkGjXrkWWqGcnPC0vBP
      AUTH_SERVER_CLIENTSECRET: v9mjRtuEVwpt7cgqnsq6mxtCa5FbUOpKLGh7WX8a1dWbBKfrM3iV3VYMtE60jr3W7GLWtNeYIaJ8EUxPkaInclWVXf64qKdR3IKwyfpDU7JhvWEwIYQYdwV1YAUZjB2e
      AUTH_SERVER_TOKENNAME: token
      AUTH_SERVER_SCOPE_DOWNLOAD_SYSTEM: song.download
      AUTH_SERVER_SCOPE_DOWNLOAD_STUDY_PREFIX: song.
      AUTH_SERVER_SCOPE_DOWNLOAD_STUDY_SUFFIX: .download
      AUTH_SERVER_SCOPE_UPLOAD_SYSTEM: song.upload
      AUTH_SERVER_SCOPE_UPLOAD_STUDY_PREFIX: song.
      AUTH_SERVER_SCOPE_UPLOAD_STUDY_SUFFIX: .upload
      SERVER_SSL_ENABLED: "false"
      UPLOAD_PARTSIZE: 1073741824
      UPLOAD_CONNECTION_TIMEOUT: 1200000
      LOGGING_LEVEL_BIO_OVERTURE_SCORE_SERVER: DEBUG
      LOGGING_LEVEL_ORG_APACHE_HTTP_WIRE: DEBUG
      LOGGING_LEVEL_ORG_APACHE_HTTP_HEADERS: DEBUG
      ENDPOINTS_DUMP_ENABLED: "false"
      ENDPOINTS_ENV_ENABLED: "true"
      ENDPOINTS_INFO_ENABLED: "true"
    ports:
      - "8087:8080"
    depends_on:
      - object-storage
      - some-auth-server
    volumes:
      - "./scratch/score-server-logs:/score-server/logs"
  score-client:
    image: overture/score:5.0.0
    user: "$MY_UID:$MY_GID"
    environment:
      ACCESSTOKEN: ad83ebde-a55c-11e7-abc4-cec278b6b50a
      METADATA_URL: http://song-server:8080
      STORAGE_URL: http://score-server:8080
    volumes:
      - "./song-example-data:/song-client/input"
      - "./scratch/score-client-logs:/score-client/logs"
      - "./scratch/score-client-output:/score-client/output"
      - "./scratch/song-client-output:/song-client/output"
    command: bin/score-client
  song-db:
    image: "postgres:9.6"
    environment:
      POSTGRES_DB: song
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - "./song-db-init:/docker-entrypoint-initdb.d"
  aws-cli:
    image: "mesosphere/aws-cli:latest"
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_DEFAULT_REGION: us-east-1
    volumes:
      - "./object-storage-init/data/oicr.icgc.test/data:/score-data:ro"
  song-client:
    image: overture/song-client:4.2.0
    user: root 
    environment:
      CLIENT_ACCESS_TOKEN: ad83ebde-a55c-11e7-abc4-cec278b6b50a
      CLIENT_STUDY_ID: ABC123
      CLIENT_DEBUG: "true"
      CLIENT_SERVER_URL: http://song-server:8080
    volumes:
      - "./song-example-data:/song-client/input"
      - "./scratch/song-client-logs:/song-client/logs"
      - "./scratch/song-client-output:/song-client/output"
    command: bin/sing
  song-server:
    image: overture/song-server:4.2.0
    environment:
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: "prod,secure,default"
      AUTH_SERVER_URL: http://some-auth-server:8080/check_token/
      AUTH_SERVER_CLIENTID:  3kJhz9pNtC0pFHAxr2SPkUkGjXrkWWqGcnPC0vBP
      AUTH_SERVER_CLIENTSECRET: v9mjRtuEVwpt7cgqnsq6mxtCa5FbUOpKLGh7WX8a1dWbBKfrM3iV3VYMtE60jr3W7GLWtNeYIaJ8EUxPkaInclWVXf64qKdR3IKwyfpDU7JhvWEwIYQYdwV1YAUZjB2e
      AUTH_SERVER_TOKENNAME: token
      AUTH_SERVER_SCOPE_STUDY_PREFIX: song.
      AUTH_SERVER_SCOPE_STUDY_SUFFIX: .upload
      AUTH_SERVER_SCOPE_SYSTEM: song.upload
      SCORE_URL: http://score-server:8080
      SCORE_ACCESSTOKEN: ad83ebde-a55c-11e7-abc4-cec278b6b50a
      MANAGEMENT_SERVER_PORT: 8081
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://song-db/song?stringtype=unspecified
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: "classpath:db/migration"
      ID_USELOCAL: "true"
    ports:
      - "8080:8080"
    depends_on:
      - song-db 
      - some-auth-server
      - score-server
    volumes:
      - "./scratch/song-server-logs:/song-server/logs"

volumes:
    object-storage-data: {}
    auth-data: {}
